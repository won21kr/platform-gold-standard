.index-banner.section.no-pad-bot
  .container
    = render 'layouts/sidenav'
    .row
      .col.m12.l10.push-l2
        %h3.thin{:style => "margin-top: 35px; font-size: 28px; letter-spacing: 1.5px; text-color: #002557;"}
          %i.material-icons.prefix{:style => "font-size: 28px;"} equalizer
          Event Activity
        %h6.caption.thin{:style => "font-size: 16px;"}
          Track both admin and user Box events

        .col.s12{:style => "margin-top: 30px"}
          -# .col.s4
          -#   %h6
          -#     Box EventStream
        .col.s6
          %ul.tabs{:style => "background-color: transparent; width: 80% !important;"}
            %li.tab.active{:style => "font-size: 12px !important;"}
              %a{:href => "#admin"}
                Admin
            %li.tab{:style => "font-size: 12px !important;"}
              %a{:href => "#user"}
                User

        -# TABS
        .col.s12#admin{:style => "margin-top: 30px"}
          .col.s12
            %h6{:style => "margin-bottom: 30px"}
              Box enterprise events
            %table.highlight#adminEvents
              %thead
                %tr
                  %th{"data-field" => "id"} Folder
                  %th{"data-field" => "name"} Name
                  %th{"data-field" => "modified"} Last Modified
                  %th{"data-field" => "modified"} Description

        .col.s12#user{:style => "margin-top: 30px"}
          .col.s12
            %h6{:style => "margin-bottom: 30px"}
              = 'App User events'
            %table.highlight#userEvents
              %thead
                %tr
                  %th{"data-field" => "name"} Type
                  %th{"data-field" => "modified"} Recorded At
                  %th{"data-field" => "id"} Item Name
                  %th{"data-field" => "id"} User
              - @user_events.each do |event|
                %tr
                  %td
                    = event.event_type
                  %td
                    = DateTime.strptime(event.recorded_at).strftime("%B %d, %Y %l:%M %p")
                  %td
                    = event.source.name
                  %td
                    = event.created_by.name

:javascript
  var initPosition = "#{@user_stream_pos}";
  eventArray = [];
  setTimeout(addEvent(initPosition, eventArray), 3000);


  function addEvent(streamPos, eventIds) {

    // The Box OAuth 2 Header. Add your access token.
    var headers = { Authorization: 'Bearer #{@user_access_token}'};
    var eventsUrl = 'https://api.box.com/2.0/events?stream_position=' + streamPos;

    $.ajax({
      url: eventsUrl,
      headers: headers,
      crossDomain: true,
      type: 'GET',
      // This prevents JQuery from trying to append the form as a querystring
      processData: false,
      contentType: false,
    }).complete(function ( data ) {

      var obj = $.parseJSON(data.responseText);
      events = obj.entries

      // loop through all events
      for (i = 0; i < events.length; i++) {

        if (eventIds.indexOf(events[i].event_id) > -1) {
          // event already processed
        } else {
          // event not yet processed
          newEvent = $("<tr><td>" + events[i].event_type +
                       "</td><td>" + moment(events[i].recorded_at).format("MMMM D, YYYY hh:mm A") +
                       "</td><td>" + events[i].source.name +
                       "</td><td>" + events[i].created_by.name + "</td></tr>").hide();
          $("#userEvents").prepend(newEvent);
          newEvent.fadeIn();
          eventIds.push(events[i].event_id);
        }
      }

      setTimeout(function() {addEvent(obj.next_stream_position, eventIds);}, 3000);
    });
  }
